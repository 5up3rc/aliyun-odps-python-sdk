env:
  global:
  - REPO_NAME=aliyun-odps-python-sdk
notifications:
  email: false


  
language: python
python: 3.5

matrix:
  include:
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64 PYVER=cp27-cp27mu
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_i686 PYVER=cp27-cp27mu
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64 PYVER=cp27-cp27m
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64 PYVER=cp35-cp35m
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64 PYVER=cp36-cp36m
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_i686 PYVER=cp27-cp27m
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_i686 PYVER=cp35-cp35m
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_i686 PYVER=cp36-cp36m
    - os: osx
      language: generic
      env: PYTHON=2.7.12
    - os: osx
      language: generic
      env: PYTHON=3.5.3
    - os: osx
      language: generic
      env: PYTHON=3.6.1


install:
  - sudo chmod 777 bin/travis/*
  - bin/travis/${TRAVIS_OS_NAME}"-install.sh"
  #- bin/travis/${TRAVIS_OS_NAME}"-test.sh"

script:
  - ls dist

after_success:
  - echo "[distutils]"                                  > ~/.pypirc
  - echo "index-servers ="                             >> ~/.pypirc
  - echo "    pypi"                                    >> ~/.pypirc
  - echo "[pypi]"                                      >> ~/.pypirc
  - echo "repository=https://upload.pypi.org/legacy/"  >> ~/.pypirc
  - echo "username=pyodps"                             >> ~/.pypirc
  - echo "password=$PSD"                               >> ~/.pypirc
  - if [[ "$OSTYPE" == "darwin"* ]]; then
      PYENV_ROOT="$HOME/.pyenv";
      PATH="$PYENV_ROOT/bin:$PATH";
      eval "$(pyenv init -)";
      if [ "$PYTHON" -ge "3.0" ]; then
      	pyenv global $PYTHON;
      fi;
    fi
  - python -m pip install twine
  # upload only commit with tag
  - if [ "$TRAVIS_TAG" ]; then
    twine upload -r pypi --skip-existing dist/*.whl;
    else echo "Not on a tag, won't deploy to pypi";
    fi
